{"version":3,"sources":["components/Note/Note.js","DUMMY_NOTES.js","App.js","reportWebVitals.js","index.js"],"names":["Note","note","onNoteUpdate","className","onBlur","event","newTextValue","currentTarget","textContent","text","updatedNoteObject","contentEditable","suppressContentEditableWarning","href","link","DUMMY_NOTES","_id","App","useState","notesList","setNotesList","useEffect","listFromStorageString","localStorage","getItem","listFromStorageArray","JSON","parse","console","log","setItem","stringify","updateNoteItem","updatedNote","updatedList","map","noteItem","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QA2BeA,EAxBF,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAclB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,OAdW,SAACC,GACrB,IAAMC,EAAeD,EAAME,cAAcC,YACzC,GAAIF,IAAiBL,EAAKQ,KAA1B,CAGA,IAAMC,EAAiB,2BAChBT,GADgB,IAEnBQ,KAAMH,IAEVJ,EAAaQ,KAKqBC,iBAAiB,EAAMC,gCAAgC,EAAMT,UAAU,aAArG,SAAmHF,EAAKQ,OACxH,qBAAKN,UAAU,aAAf,SACI,mBAAGU,KAAMZ,EAAKa,KAAd,SAAqBb,EAAKa,aCd3BC,EANK,CAChB,CAAEC,IAAK,IAAKP,KAAM,QAASK,KAAM,sBACjC,CAAEE,IAAK,IAAKP,KAAM,SAAUK,KAAM,wBAClC,CAAEE,IAAK,IAAKP,KAAM,WAAYK,KAAM,uBACpC,CAAEE,IAAK,IAAKP,KAAM,YAAaK,KAAM,qBCgD1BG,MAhDf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACR,IAAMC,EAAwBC,aAAaC,QAAQ,YACnD,GAAIF,EAAuB,CACzB,IAAMG,EAAuBC,KAAKC,MAAML,GACxCF,EAAaK,QAEbL,EAAaL,KAEd,IACHa,QAAQC,IAAIV,GACZE,qBAAU,WACRE,aAAaO,QAAQ,WAAYJ,KAAKK,UAAUZ,MAC/C,CAACA,IAUJ,IAAMa,EAAiB,SAACC,GACtBL,QAAQC,IAAII,GACZ,IAAMC,EAAcf,EAAUgB,KAAI,SAACC,GACjC,OAAIA,EAASpB,MAAQiB,EAAYjB,IACxBiB,EAEFG,KAEThB,EAAac,IAEf,OACE,qBAAK/B,UAAU,MAAf,SACE,qBAAKA,UAAU,aAAf,SACGgB,EAAUgB,KAAI,SAACC,EAAUC,GACxB,OACE,cAAC,EAAD,CAAMpC,KAAMmC,EAAUlC,aAAc8B,GAAqBK,WCjCtDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f19219c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Note.css'\r\n\r\nconst Note = ({ note, onNoteUpdate }) => {\r\n\r\n    const noteTextUpdated = (event) => {\r\n        const newTextValue = event.currentTarget.textContent\r\n        if (newTextValue === note.text) {\r\n            return\r\n        }\r\n        const updatedNoteObject = {\r\n            ...note,\r\n            text: newTextValue\r\n        }\r\n        onNoteUpdate(updatedNoteObject);\r\n    }\r\n\r\n    return (\r\n        <div className=\"note\">\r\n            <div onBlur={noteTextUpdated} contentEditable={true} suppressContentEditableWarning={true} className=\"note__text\">{note.text}</div>\r\n            <div className=\"note__link\">\r\n                <a href={note.link}>{note.link}</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","\r\nconst DUMMY_NOTES = [\r\n    { _id: '1', text: 'hamza', link: 'https://google.com' },\r\n    { _id: '2', text: 'mughal', link: 'https://facebook.com' },\r\n    { _id: '3', text: 'abubakar', link: 'https://twitter.com' },\r\n    { _id: '4', text: 'get a job', link: 'https://rozee.pk' }\r\n]\r\nexport default DUMMY_NOTES;","import './App.css'\nimport { useEffect, useState } from \"react\";\nimport Note from \"./components/Note/Note\";\nimport DUMMY_NOTES from \"./DUMMY_NOTES\";\n\nfunction App() {\n  const [notesList, setNotesList] = useState([])\n\n  useEffect(() => {\n    const listFromStorageString = localStorage.getItem('my-notes')\n    if (listFromStorageString) {\n      const listFromStorageArray = JSON.parse(listFromStorageString)\n      setNotesList(listFromStorageArray)\n    } else {\n      setNotesList(DUMMY_NOTES)\n    }\n  }, [])\n  console.log(notesList);\n  useEffect(() => {\n    localStorage.setItem('my-notes', JSON.stringify(notesList))\n  }, [notesList])\n  // const getNotes = async () => {\n  //   try {\n  //     const { data: { notes } } = await axios.get('http://localhost:5000/notes')\n  //     console.log(notes);\n  //     setNotesList(notes)\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  const updateNoteItem = (updatedNote) => {\n    console.log(updatedNote);\n    const updatedList = notesList.map((noteItem) => {\n      if (noteItem._id === updatedNote._id) {\n        return updatedNote\n      }\n      return noteItem\n    })\n    setNotesList(updatedList)\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"notes-list\">\n        {notesList.map((noteItem, index) => {\n          return (\n            <Note note={noteItem} onNoteUpdate={updateNoteItem} key={index} />\n          )\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}